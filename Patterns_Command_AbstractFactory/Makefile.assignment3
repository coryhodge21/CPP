#----------------------------------------------------------------------------
#       Macros
#----------------------------------------------------------------------------
CC            = gcc
CXX           = g++
LD            = $(CXX) $(CCFLAGS) $(CPPFLAGS)
AR            = ar
PICFLAGS      = -fPIC
CPPFLAGS      = $(PICFLAGS) $(GENFLAGS) -g -std=c++11 -D_REENTRANT
OBJEXT        = .o
OUTPUT_OPTION = -o "$@"
COMPILE.c     = $(CC) $(CFLAGS) $(CPPFLAGS) -c
COMPILE.cc    = $(CXX) $(CCFLAGS) $(CPPFLAGS) -c
LDFLAGS       = -L"."
CCC           = $(CXX)
MAKEFILE      = Makefile.assignment3
DEPENDENCIES  = .depend.$(MAKEFILE)
BTARGETDIR    = ./
BIN           = $(BTARGETDIR)assignment3$(EXESUFFIX)$(EXEEXT)
CAT           = cat
MV            = mv -f
RM            = rm -rf
CP            = cp -p
NUL           = /dev/null
MKDIR         = mkdir -p
TESTDIRSTART  = test -d
TESTDIREND    = ||
TOUCH         = touch
EXEEXT        = 
LIBPREFIX     = lib
LIBSUFFIX     = 
GENFLAGS      = -O
LDLIBS        = -ldl $(subst lib,-l,$(sort $(basename $(notdir $(wildcard /usr/lib/librt.so /lib/librt.so))))) -lpthread
OBJS          = main$(OBJEXT) Receiver$(OBJEXT) Invoker$(OBJEXT) Command$(OBJEXT) AddCmd$(OBJEXT) ConcreteFactories$(OBJEXT) ConcreteProducts$(OBJEXT) DivCmd$(OBJEXT) MulCmd$(OBJEXT) SubCmd$(OBJEXT) Parenthesis$(OBJEXT)
SRC           = main.cpp Receiver.cpp Invoker.cpp Command.cpp AddCmd.cpp ConcreteFactories.cpp ConcreteProducts.cpp DivCmd.cpp MulCmd.cpp SubCmd.cpp Parenthesis.cpp
LINK.cc       = $(LD) $(LDFLAGS)
EXPORTFLAGS   = 
DEPLIBS       = $(foreach lib, , $(foreach libpath, ., $(wildcard $(libpath)/lib$(lib).a)))

#----------------------------------------------------------------------------
#       Local targets
#----------------------------------------------------------------------------

all: $(BIN)

$(BIN): $(OBJS) $(DEPLIBS)
	@$(TESTDIRSTART) "$(BTARGETDIR)" $(TESTDIREND) $(MKDIR) "$(BTARGETDIR)"
	$(LINK.cc) $(OBJS) $(LDLIBS) $(OUTPUT_OPTION)

generated: $(GENERATED_DIRTY)
	@-:

main$(OBJEXT): main.cpp
	$(COMPILE.cc) $(EXPORTFLAGS) $(OUTPUT_OPTION) main.cpp

Receiver$(OBJEXT): Receiver.cpp
	$(COMPILE.cc) $(EXPORTFLAGS) $(OUTPUT_OPTION) Receiver.cpp

Invoker$(OBJEXT): Invoker.cpp
	$(COMPILE.cc) $(EXPORTFLAGS) $(OUTPUT_OPTION) Invoker.cpp

Command$(OBJEXT): Command.cpp
	$(COMPILE.cc) $(EXPORTFLAGS) $(OUTPUT_OPTION) Command.cpp

AddCmd$(OBJEXT): AddCmd.cpp
	$(COMPILE.cc) $(EXPORTFLAGS) $(OUTPUT_OPTION) AddCmd.cpp

ConcreteFactories$(OBJEXT): ConcreteFactories.cpp
	$(COMPILE.cc) $(EXPORTFLAGS) $(OUTPUT_OPTION) ConcreteFactories.cpp

ConcreteProducts$(OBJEXT): ConcreteProducts.cpp
	$(COMPILE.cc) $(EXPORTFLAGS) $(OUTPUT_OPTION) ConcreteProducts.cpp

DivCmd$(OBJEXT): DivCmd.cpp
	$(COMPILE.cc) $(EXPORTFLAGS) $(OUTPUT_OPTION) DivCmd.cpp

MulCmd$(OBJEXT): MulCmd.cpp
	$(COMPILE.cc) $(EXPORTFLAGS) $(OUTPUT_OPTION) MulCmd.cpp

SubCmd$(OBJEXT): SubCmd.cpp
	$(COMPILE.cc) $(EXPORTFLAGS) $(OUTPUT_OPTION) SubCmd.cpp

Parenthesis$(OBJEXT): Parenthesis.cpp
	$(COMPILE.cc) $(EXPORTFLAGS) $(OUTPUT_OPTION) Parenthesis.cpp

clean:
	-$(RM) $(OBJS)

realclean: clean
	-$(RM) $(BIN)

check-syntax:
	$(COMPILE.cc) $(EXPORTFLAGS) -Wall -Wextra -pedantic -fsyntax-only $(CHK_SOURCES)

#----------------------------------------------------------------------------
#       Dependencies
#----------------------------------------------------------------------------


depend:
	-$(MPC_ROOT)/depgen.pl  $(CFLAGS) $(CCFLAGS) $(CPPFLAGS) -f $(DEPENDENCIES) $(SRC) 2> $(NUL)

-include $(DEPENDENCIES)
