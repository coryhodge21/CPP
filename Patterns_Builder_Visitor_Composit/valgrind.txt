==49566== Memcheck, a memory error detector
==49566== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==49566== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==49566== Command: ./assignment4
==49566== Parent PID: 46764
==49566== 
==49566== Conditional jump or move depends on uninitialised value(s)
==49566==    at 0x5CBBA1C: ____strtod_l_internal (in /usr/lib64/libc-2.17.so)
==49566==    by 0x401BE9: atof (stdlib-float.h:28)
==49566==    by 0x401BE9: Num_Node::Num_Node(char, int) (Num_Node.cpp:14)
==49566==    by 0x402393: Builder::build_number_node(char) (Builder.cpp:315)
==49566==    by 0x402BAF: Builder::construct_node_Qs(std::string) (Builder.cpp:259)
==49566==    by 0x402D39: Builder::build_expression_tree(std::string) (Builder.cpp:151)
==49566==    by 0x401987: Calculator::enter_expression(std::string) (Calculator.cpp:49)
==49566==    by 0x4017ED: main (main.cpp:47)
==49566== 
==49566== Conditional jump or move depends on uninitialised value(s)
==49566==    at 0x5CBBA56: ____strtod_l_internal (in /usr/lib64/libc-2.17.so)
==49566==    by 0x401BE9: atof (stdlib-float.h:28)
==49566==    by 0x401BE9: Num_Node::Num_Node(char, int) (Num_Node.cpp:14)
==49566==    by 0x402393: Builder::build_number_node(char) (Builder.cpp:315)
==49566==    by 0x402BAF: Builder::construct_node_Qs(std::string) (Builder.cpp:259)
==49566==    by 0x402D39: Builder::build_expression_tree(std::string) (Builder.cpp:151)
==49566==    by 0x401987: Calculator::enter_expression(std::string) (Calculator.cpp:49)
==49566==    by 0x4017ED: main (main.cpp:47)
==49566== 
==49566== Use of uninitialised value of size 8
==49566==    at 0x5CBBCC0: ____strtod_l_internal (in /usr/lib64/libc-2.17.so)
==49566==    by 0x401BE9: atof (stdlib-float.h:28)
==49566==    by 0x401BE9: Num_Node::Num_Node(char, int) (Num_Node.cpp:14)
==49566==    by 0x402393: Builder::build_number_node(char) (Builder.cpp:315)
==49566==    by 0x402BAF: Builder::construct_node_Qs(std::string) (Builder.cpp:259)
==49566==    by 0x402D39: Builder::build_expression_tree(std::string) (Builder.cpp:151)
==49566==    by 0x401987: Calculator::enter_expression(std::string) (Calculator.cpp:49)
==49566==    by 0x4017ED: main (main.cpp:47)
==49566== 
==49566== Stack overflow in thread #1: can't grow stack to 0x1ffe801000
==49566== 
==49566== Process terminating with default action of signal 11 (SIGSEGV)
==49566==  Access not within mapped region at address 0x1FFE801FF8
==49566== Stack overflow in thread #1: can't grow stack to 0x1ffe801000
==49566==    at 0x4021A2: Special_Fx_Nodes::~Special_Fx_Nodes() (Special_Fx_Nodes.cpp:33)
==49566==  If you believe this happened as a result of a stack
==49566==  overflow in your program's main thread (unlikely but
==49566==  possible), you can try to increase the size of the
==49566==  main thread stack using the --main-stacksize= flag.
==49566==  The main thread stack size used in this run was 8388608.
==49566== Stack overflow in thread #1: can't grow stack to 0x1ffe801000
==49566== 
==49566== Process terminating with default action of signal 11 (SIGSEGV)
==49566==  Access not within mapped region at address 0x1FFE801FF0
==49566== Stack overflow in thread #1: can't grow stack to 0x1ffe801000
==49566==    at 0x4A246B0: _vgnU_freeres (vg_preloaded.c:59)
==49566==  If you believe this happened as a result of a stack
==49566==  overflow in your program's main thread (unlikely but
==49566==  possible), you can try to increase the size of the
==49566==  main thread stack using the --main-stacksize= flag.
==49566==  The main thread stack size used in this run was 8388608.
==49566== 
==49566== HEAP SUMMARY:
==49566==     in use at exit: 13,009 bytes in 57 blocks
==49566==   total heap usage: 65 allocs, 8 frees, 13,251 bytes allocated
==49566== 
==49566== 1,392 (72 direct, 1,320 indirect) bytes in 3 blocks are definitely lost in loss record 25 of 29
==49566==    at 0x4C2A1E3: operator new(unsigned long) (vg_replace_malloc.c:334)
==49566==    by 0x401A1C: Calculator::calculate_expression() (Calculator.cpp:66)
==49566==    by 0x401837: main (main.cpp:50)
==49566== 
==49566== 8,352 (264 direct, 8,088 indirect) bytes in 3 blocks are definitely lost in loss record 29 of 29
==49566==    at 0x4C2A1E3: operator new(unsigned long) (vg_replace_malloc.c:334)
==49566==    by 0x401961: Calculator::enter_expression(std::string) (Calculator.cpp:47)
==49566==    by 0x4017ED: main (main.cpp:47)
==49566== 
==49566== LEAK SUMMARY:
==49566==    definitely lost: 336 bytes in 6 blocks
==49566==    indirectly lost: 9,408 bytes in 36 blocks
==49566==      possibly lost: 0 bytes in 0 blocks
==49566==    still reachable: 3,265 bytes in 15 blocks
==49566==                       of which reachable via heuristic:
==49566==                         stdstring          : 33 bytes in 1 blocks
==49566==         suppressed: 0 bytes in 0 blocks
==49566== Reachable blocks (those to which a pointer was found) are not shown.
==49566== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==49566== 
==49566== For counts of detected and suppressed errors, rerun with: -v
==49566== Use --track-origins=yes to see where uninitialised values come from
==49566== ERROR SUMMARY: 26 errors from 5 contexts (suppressed: 0 from 0)
